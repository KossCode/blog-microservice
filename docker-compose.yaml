version: '3'

services:
  #Databases
  author-service-postgre-db:
    image: postgres:13.1-alpine
    restart: always
    container_name: author-service-postgre-db
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_PASSWORD=docker
      - POSTGRES_USER=postgres
      - POSTGRES_DB=author-service
      
  post-service-mongo-db:
    image: mongo:latest
    container_name: post-service-mongo-db
    restart: always
    ports:
      - "27017:27017"

  #Internal Services
  gateway-service:
    image: kosstheonly/gateway-service:latest
    build:
      context: ./infrastructure/gateway-service/
    container_name: gateway-service
    ports:
      - "8080:8080"
    depends_on:
      - post-service
      - author-service
      - cache
    environment:
      - SPRING_ZIPKIN_BASE_URL=http://zipkin-service:9411/
      - SPRING_ZIPKIN_ENABLED=true
  config-server:
    image: kosstheonly/config-server:latest
    build:
      context: ./config-server/
    container_name: config-server
    ports:
      - "8888:8888"
  author-service:
    image: kosstheonly/author-service:latest
    build:
      context: ./author-service/
    container_name: author-service
    restart: always
    ports:
      - "8081:8081"
    depends_on:
      - config-server
      - author-service-postgre-db
      - discovery-service
      - zipkin-service
    environment:
      - spring.config.import=optional:configserver:http://config-server:8888
      - SPRING_DATASOURCE_URL=jdbc:postgresql://author-service-postgre-db:5432/author-service
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=docker
      - SPRING_ZIPKIN_BASE_URL=http://zipkin-service:9411/
      - SPRING_ZIPKIN_ENABLED=true
    links:
      - config-server
  post-service:
    image: kosstheonly/post-service:latest
    build:
      context: ./post-service/
    container_name: post-service
    ports:
      - "8082:8082"
    depends_on:
      - post-service-mongo-db
      - discovery-service
      - zipkin-service
    links:
      - post-service-mongo-db
    environment:
      - SPRING_ZIPKIN_BASE_URL=http://zipkin-service:9411/
      - SPRING_ZIPKIN_ENABLED=true
  discovery-service:
    image: kosstheonly/discovery-service:latest
    build:
      context: ./infrastructure/discovery-service/
    container_name: discovery-service
    ports:
      - "8761:8761"

  #External Services
  zipkin-service:
    image: openzipkin/zipkin:latest
    container_name: zipkin-service
    ports:
      - "9411:9411"
  grafana:
    image: kosstheonly/grafana:latest
    container_name: grafana-service
    build:
      context: ./infrastructure/config/grafana
    ports:
      - "3000:3000"
    volumes:
      - ./infrastructure/grafana:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    networks:
      monitoring:
        aliases:
          - grafana
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus-service
    ports:
      - "9090:9090"
    volumes:
      - ./infrastructure/config/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./infrastructure/prometheus:/prometheus
    networks:
      monitoring:
        aliases:
          - prometheus
  cache:
    image: redis:6.2-alpine
    container_name: redis-service
    restart: always
    ports:
      - '6379:6379'
networks:
  monitoring: